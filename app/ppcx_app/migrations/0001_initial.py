# Generated by Django 5.2.3 on 2025-06-30 12:45

import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Camera',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('camera_name', models.CharField(max_length=255, unique=True)),
                ('serial_number', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('model', models.CharField(blank=True, max_length=100, null=True)),
                ('lens', models.CharField(blank=True, max_length=100, null=True)),
                ('focal_length_mm', models.FloatField(blank=True, null=True)),
                ('sensor_width_mm', models.FloatField(blank=True, null=True)),
                ('sensor_height_mm', models.FloatField(blank=True, null=True)),
                ('pixel_size_um', models.FloatField(blank=True, null=True)),
                ('easting', models.FloatField(blank=True, null=True)),
                ('northing', models.FloatField(blank=True, null=True)),
                ('elevation', models.FloatField(blank=True, null=True)),
                ('epsg_code', models.IntegerField(default=32632)),
                ('installation_date', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('location', django.contrib.gis.db.models.fields.PointField(blank=True, dim=3, null=True, srid=32632)),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acquisition_timestamp', models.DateTimeField()),
                ('file_path', models.CharField(max_length=1024, unique=True)),
                ('width_px', models.IntegerField(blank=True, null=True)),
                ('height_px', models.IntegerField(blank=True, null=True)),
                ('exif_data', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('camera', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='images', to='ppcx_app.camera')),
            ],
        ),
        migrations.CreateModel(
            name='DIC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference_date', models.DateField(blank=True, null=True)),
                ('result_file_path', models.CharField(blank=True, max_length=1024, null=True)),
                ('master_timestamp', models.DateTimeField(blank=True, null=True)),
                ('slave_timestamp', models.DateTimeField(blank=True, null=True)),
                ('time_difference_hours', models.FloatField(blank=True, null=True)),
                ('software_used', models.CharField(blank=True, max_length=100, null=True)),
                ('software_version', models.CharField(blank=True, max_length=50, null=True)),
                ('processing_parameters', models.JSONField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('master_image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='master_dic', to='ppcx_app.image')),
                ('slave_image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='slave_dic', to='ppcx_app.image')),
            ],
        ),
        migrations.CreateModel(
            name='CameraCalibration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('calibration_date', models.DateTimeField()),
                ('is_active', models.BooleanField(default=True)),
                ('colmap_model_id', models.IntegerField(choices=[(0, 'SIMPLE_PINHOLE'), (1, 'PINHOLE'), (2, 'SIMPLE_RADIAL'), (3, 'RADIAL'), (4, 'OPENCV'), (5, 'OPENCV_FISHEYE'), (6, 'FULL_OPENCV'), (7, 'FOV'), (8, 'SIMPLE_RADIAL_FISHEYE'), (9, 'RADIAL_FISHEYE'), (10, 'THIN_PRISM_FISHEYE')])),
                ('colmap_model_name', models.CharField(blank=True, max_length=50, null=True)),
                ('image_width_px', models.IntegerField()),
                ('image_height_px', models.IntegerField()),
                ('intrinsic_params', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), size=None)),
                ('rotation_quaternion', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), blank=True, null=True, size=4)),
                ('translation_vector', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), blank=True, null=True, size=3)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('camera', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calibrations', to='ppcx_app.camera')),
            ],
            options={
                'constraints': [models.UniqueConstraint(condition=models.Q(('is_active', True)), fields=('camera', 'is_active'), name='unique_active_calibration')],
            },
        ),
        migrations.AddIndex(
            model_name='image',
            index=models.Index(fields=['camera'], name='ppcx_app_im_camera__e3f3a0_idx'),
        ),
        migrations.AddIndex(
            model_name='image',
            index=models.Index(fields=['acquisition_timestamp'], name='ppcx_app_im_acquisi_b2d820_idx'),
        ),
        migrations.AddConstraint(
            model_name='image',
            constraint=models.UniqueConstraint(fields=('camera', 'acquisition_timestamp'), name='unique_camera_timestamp'),
        ),
        migrations.AddIndex(
            model_name='dic',
            index=models.Index(fields=['reference_date'], name='ppcx_app_di_referen_0c61a6_idx'),
        ),
        migrations.AddIndex(
            model_name='dic',
            index=models.Index(fields=['master_timestamp'], name='ppcx_app_di_master__de740b_idx'),
        ),
        migrations.AddIndex(
            model_name='dic',
            index=models.Index(fields=['slave_timestamp'], name='ppcx_app_di_slave_t_bb363e_idx'),
        ),
        migrations.AddConstraint(
            model_name='dic',
            constraint=models.CheckConstraint(condition=models.Q(('master_timestamp', models.F('slave_timestamp')), _negated=True), name='different_timestamps'),
        ),
        migrations.AddConstraint(
            model_name='dic',
            constraint=models.UniqueConstraint(fields=('master_image', 'slave_image'), name='unique_image_pair_paths'),
        ),
    ]
